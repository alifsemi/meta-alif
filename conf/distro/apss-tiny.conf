# Copyright (C) 2023 Alif Semiconductor - All Rights Reserved.
# Use, distribution and modification of this code is permitted under the
# terms stated in the Alif Semiconductor Software License Agreement
#
# You should have received a copy of the Alif Semiconductor Software
# License Agreement with this file. If not, please write to:
# contact@alifsemi.com, or visit: https://alifsemi.com/license

# Use custom local.conf.sample before it is used from oe-core.
SANITY_LOCALCONF_SAMPLE = "${ALIFBASE}/conf/local.conf.sample"

require conf/distro/poky-tiny.conf

DISTRO_NAME = "Alif Iota - Tiny Linux Distribution"
DISTRO = "iota-tiny"
DISTRO_VERSION = "0.1"
TCLIBC = "musl"
DISTRO = "apss-tiny"
INHERIT_append += "image-buildinfo own-mirrors dct aes"
BB_GENERATE_MIRROR_TARBALLS = "1"
DISTROOVERRIDES .= ":apss-tiny"

# enable mdev/busybox for init
VIRTUAL-RUNTIME_dev_manager = "busybox-mdev"
VIRTUAL-RUNTIME_login_manager = "busybox"
VIRTUAL-RUNTIME_init_manager = "busybox"
VIRTUAL-RUNTIME_initscripts = "initscripts"
VIRTUAL-RUNTIME_keymaps = "keymaps"
DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"

IMAGE_LINGUAS = " "
IMAGE_FEATURES += "debug-tweaks"
IMAGE_CLASSES += "cramfs-xip"
IMAGE_FSTYPES = "tar.bz2 ext4 cramfs-xip"

MACHINE_EXTRA_RDEPENDS += "kernel-module-cdc kernel-module-d2d"
EXTRA_IMAGEDEPENDS_append = " trusted-firmware-a a32-linux-dd-testcases"


# Ship static libraries into SDK, this makes binaries link (via -static option)
# to static libaries (.a) which significantly reduce the binary size
# rather than copying huge shared library (.so) to RFS.
SDKIMAGE_FEATURES_append += "staticdev-pkgs"


# make MHU as part of default kernel config as it is
# needed for programming the OSPI1 flash.
DISTRO_FEATURES_append += "apss-mhu apss-hwsem"

# set BASE_IMAGE to 1 to include SD share, USB, I2C, SPI, Debug, and CRC.
DISTRO_FEATURES_append += "${@bb.utils.contains('BASE_IMAGE', '1', 'apss-sd-share apss-usb apss-i2c apss-spi apss-debug apss-crc', '', d)}"

# ship statically linked gdbserver to reduce size of cramfs-xip
STATIC_GDBSERVER ?= "1"

#FEATURE_PACKAGES_apss-graphics = "packagegroup-apss-graphics"
#MACHINE_EXTRA_RDEPENDS += "${@bb.utils.contains('DISTRO_FEATURES', 'apss-graphics', 'kernel-module-cdc kernel-module-d2d', '', d)}"

# DCT JSON file
DCT_JSON_FILE ?= ""

# AES encryption
IMAGE_POSTPROCESS_COMMAND_append += "${@bb.utils.contains('AES_EN','1','aes_enc_rootfs;','',d)}"
